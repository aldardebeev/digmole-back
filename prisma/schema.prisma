// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  chatId    String   @unique @map("chat_id")
  username  String   @map("username") @db.VarChar(256)
  createdAt DateTime @default(now()) @map("created_at")
  balance   Int      @map("balance")

  ReferralCodes    ReferralCode?
  ReferralCodeUser ReferralCodeUser[]
  Maning           Maning[]

  @@index([id])
  @@map("users")
}

model Maning {
  id     Int  @id @default(autoincrement())
  User   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int  @unique @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  finishAt  DateTime?  @map("finish_at")
  
  @@index([id])
  @@map("manings")
}

model ReferralCode {
  id     Int    @id @default(autoincrement())
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int    @unique @map("user_id")
  code   String @map("code")

  ReferralCodeUser ReferralCodeUser[]

  @@index([id])
  @@map("referral_codes")
}

model ReferralCodeUser {
  id     Int  @id @default(autoincrement())
  User   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int  @map("user_id")

  ReferralCodes ReferralCode @relation(fields: [codeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  codeId        Int           @map("code_id")

  createdAt DateTime @default(now()) @map("created_at")

  @@index([id])
  @@map("referral_code_users")
}
